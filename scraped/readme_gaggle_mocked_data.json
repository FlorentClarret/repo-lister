"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"file\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a href=\"#mocked-data\" aria-hidden=\"true\" class=\"anchor\" id=\"user-content-mocked-data\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mocked-data</h1>\n<p><a href=\"https://travis-ci.org/gaggle/mocked-data\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/0baaf352a891b01b1bec29d215b2a13cc8065d03/68747470733a2f2f7472617669732d63692e6f72672f676167676c652f6d6f636b65642d646174612e7376673f6272616e63683d6d6173746572\" alt=\"Build Status\" data-canonical-src=\"https://travis-ci.org/gaggle/mocked-data.svg?branch=master\" style=\"max-width:100%;\"></a>\n<a href=\"https://coveralls.io/github/gaggle/mocked-data?branch=master\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/fd7d64e390a4fbb67480067d8e37ad6adff07462/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f676167676c652f6d6f636b65642d646174612f62616467652e7376673f6272616e63683d6d6173746572\" alt=\"Coverage Status\" data-canonical-src=\"https://coveralls.io/repos/github/gaggle/mocked-data/badge.svg?branch=master\" style=\"max-width:100%;\"></a>\n<a href=\"https://david-dm.org/gaggle/mocked-data\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f2f77873a49328eacdbbb39e5a09b418f586fa0d/68747470733a2f2f64617669642d646d2e6f72672f676167676c652f6d6f636b65642d646174612e737667\" alt=\"Dependency Status\" data-canonical-src=\"https://david-dm.org/gaggle/mocked-data.svg\" style=\"max-width:100%;\"></a></p>\n<p>Small module for exposing static data.</p>\n<p>Say you capture output from an API to use in tests,\nhow do you use that data?\nWIth this module you just put the captured data in a folder structure\n(see <a href=\"https://github.com/gaggle/mocked-data/tree/master/example\"><code>example</code></a> folder)\nand access it via methods on an object.\nSupports <strong>.json</strong> and <strong>.js</strong> files.</p>\n<p>Install</p>\n<pre><code>npm install gaggle/mocked-data\n</code></pre>\n<p>Usage</p>\n<pre><code>&gt; var mocked = require(\"mocked-data\")\n&gt; var m = mocked(\"./example\")\n&gt; m.foo()\n{ foo: 'root' }\n&gt; m.bar.baz()\n'baz'\n</code></pre>\n</article></div>"